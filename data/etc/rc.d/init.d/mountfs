#!/bin/sh
### BEGIN INIT INFO
# Provides:            mountfs mountvirtfs $local_fs
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       3 4 5
# Default-Stop:
# Short-Description:   Mounts file systems.
# Description:         Mounts file systems.
# X-LFS-Provided-By:   LFS
### END INIT INFO

. /.initrd/initenv
. /etc/init.d/template

MountDev()
{
	if ! mount -t devtmpfs -o mode=755,size=5m udevfs /dev 2>/dev/null; then
		mount -t tmpfs -o mode=755,size=5m udevfs /dev ||
			return 1
	fi

	makenod() { [ -e /dev/$1 ] || mknod /dev/$1 $2 $3 $4; }
	makenod ram     b 1 1
	makenod null    c 1 3
	makenod zero    c 1 5
	makenod full    c 1 7
	makenod random  c 1 8
	makenod kmsg    c 1 11
	makenod systty  c 4 0
	makenod tty0    c 4 0
	makenod tty1    c 4 1
	makenod tty     c 5 0
	makenod console c 5 1
	makenod ptmx    c 5 2
}

MountVirtualFs()
{
	local msg="Mounting filesystem"

	action_shell "$msg [/dev]:" MountDev
	action "$msg [/proc]:" mount -t proc  -o nodev,noexec,nosuid proc  /proc
	action "$msg [/sys]:"  mount -t sysfs -o nodev,noexec,nosuid sysfs /sys
	action "$msg [/run]:"  mount -t tmpfs -o mode=755            runfs /run

	mkdir -p /dev/pts /dev/shm /run/lock/subsys /run/user /run/udev /run/systemd

	action "$msg [/dev/pts]:" mount -t devpts devpts /dev/pts

	:> /run/utmp
	chmod 0664 /run/utmp

	touch "$LOCKFILE"
}

MoveFilesystems()
{
	local n
	for n in dev run ${EXPORT_FS-}; do
		[ ! -d "$rootmnt/$n" ] ||
			action "Moving filesystem [/$n]:" mount --move "/$n" "$rootmnt/$n"
	done
}

# Unmount file systems, killing processes if we have to.
UnmountFilesystems()
{
	local sig= retry delay findmnt msg= points

	retry="$1"; shift
	delay="$1"; shift
	findmnt="$1"; shift

	points="$($findmnt)"

	while [ -n "$points" -a "$retry" -gt 0 ]; do
		dsort points $points

		[ "$retry" -eq 3 ] || msg='(retry) '

		for point in $points; do
			action "Unmounting filesystem $msg[$point]:" umount -flt noproc "$point"
		done

		points="$($findmnt)"
		[ -n "$points" ] || break

		[ "${BOOTUP-}" != verbose ] || fuser -mv $points
		fuser -km $sig $points >/dev/null

		sleep $delay

		sig=-9
		retry=$(($retry-1))
	done
}

start()
{
	MountVirtualFs

	[ ! -d /etc/timer.d ] ||
		printf 'period=%s repeat=1\t/lib/initrd/rootdelay\n' "${ROOTDELAY:-180}" \
			> /etc/timer.d/rootdelay.conf

	touch "$LOCKFILE"
}

stop()
{
	# Move some filesystems to real root.
	MoveFilesystems

	# Unmount non-/dev tmpfs.
	non_dev_tmpfs()
	{
		findmnt -mno TARGET -t tmpfs |
		while read t; do
			[ -d "$t" ] &&
				mountpoint -q "$t" ||
				continue
			case "$t" in
				/dev|$rootmnt|$rootmnt/*) ;;
				*) printf '%s ' "$t" ;;
			esac
		done
	}
	UnmountFilesystems 3 5 non_dev_tmpfs

	# Unmount all the rest.
	all_rest()
	{
		findmnt -mno SOURCE,TARGET |
		while read s t; do
			[ -d "$t" ] &&
				mountpoint -q "$t" ||
				continue
			case "$s:$t" in
				*:/|*:$rootmnt|*:$rootmnt/*) ;;
				*) printf '%s ' "$t" ;;
			esac
		done
	}
	UnmountFilesystems 3 5 all_rest

	rm -f "$LOCKFILE"
}

switch "${1-}"
