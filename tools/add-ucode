#!/bin/sh -efu

. sh-functions

IUCODE_BIN=/usr/sbin/iucode_tool
fw_path="/lib/firmware"
cpu="$(sed -r -n -e '1,/^processor[[:cntrl:]]\:.*/ d' -e '/^model[[:space:]]+[[:cntrl:]]\:.*/,$ d' -e 's/.*[[:cntrl:]]\:[[:space:]](.*)/\1/ip' /proc/cpuinfo)"
if [ -n "$cpu" ]; then
	cpu_vendor="${cpu%%
*}"
	cpu_family="${cpu##*
}"
fi

prep_early_firmware()
{
	local fw="$1"
	shift

	cd "$workdir"
	mkdir -p kernel/x86/microcode
	cp "$fw_path"/"$fw" kernel/x86/microcode/"$cpu_vendor".bin
	find ./kernel | cpio -o -H newc >"$workdir"/ucode.cpio && \
	    rm -rf -- kernel

	return $?
}

prep_amd_ucode()
{
	local family ucode_file=

	[ -n "$cpu_family" ] && family=$(printf '%x\n' "$cpu_family")
	[ "$family" -ge 15 ] && \
		ucode_file=amd-ucode/microcode_amd_fam"$family"h.bin || \
		ucode_file=amd-ucode/microcode_amd.bin

	prep_early_firmware "$ucode_file" && return 0

	return 1
}

prep_intel_ucode()
{
	# microcode loading supported only for CPUs >= PentiumPro
	[ -n "$cpu_family" -a "$cpu_family" -ge 6 ] || return 1

	if [ -x "$IUCODE_BIN" ]; then
		$IUCODE_BIN --scan-system --write-earlyfw="$workdir"/ucode.cpio \
			"$fw_path"/intel-ucode && return 0
	fi

	return 1
}

case "$cpu_vendor" in
	AuthenticAMD) prep_amd_ucode
		;;
	GenuineIntel) prep_intel_ucode
		;;
	*) exit 0
		;;
esac

exit $?
