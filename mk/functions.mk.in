ifeq "$(__included-functions-mk)" ''
__included-functions-mk := 1

null  :=
space := $(null) $(null)

# $(call basedirname,<filename>)
# Return directory name of <filename>.
define basedirname
$(if ($1),$(foreach n,$(1),$(notdir $(abspath $(dir $(n))))))
endef

# $(call current-feature-name)
define current-feature-name
$(strip $(call basedirname,$(lastword $(MAKEFILE_LIST))))
endef

define __feature-disables
$(if $(1),$(eval FEATURE-DISABLES-$(1) += $(2)))
endef

# $(call feature-disables,<name> <name1> ...)
# Set a list of conflicting features of the current feature.
define feature-disables
$(if $(1),\
	$(if $(filter %/config.mk,$(lastword $(MAKEFILE_LIST))),\
		$(call __feature-disables,$(strip $(call current-feature-name)),$(1))))
endef

define __feature-requires
$(if $(1),$(foreach n,$(2),$(eval FEATURE-REQUIRED-$(n) += $(1))))
$(if $(1),$(eval FEATURE-REQUIRES-$(1) += $(2)))
endef

# $(call feature-requires,<name> <name1> ...)
# Set a list of dependencies for the current feature.
define feature-requires
$(if $(1),\
	$(if $(filter %/config.mk,$(lastword $(MAKEFILE_LIST))),\
		$(call __feature-requires,$(strip $(call current-feature-name)),$(1))))
endef

# This is helper to filter a disabled files.
# $(call wildcard_features,<filename>)
# Return a space-separated list of full <filename> paths for each feature.
define wildcard_features
$(if $(1),\
	$(filter-out \
		$(foreach exl,$(DEPRECATED_FEATURES) $(DISABLE_FEATURES),\
			$(realpath $(exl:%=$(FEATURESDIR)/%/$(1)))), \
		$(realpath $(wildcard $(FEATURESDIR)/*/$(1)))))
endef

define show-feature-dependency
$(foreach n,$(if $(1),$(1),$(sort $(foreach f,$(wildcard $(FEATURESDIR)/*/rules.mk),$(call basedirname,$(f))))),\
	$(info Feature $(n)) \
	$(info $(space) requires : $(FEATURE-REQUIRES-$(n))) \
	$(info $(space) disables : $(FEATURE-DISABLES-$(n))) \
	$(info $(space) required : $(FEATURE-REQUIRED-$(n))) \
	$(info $(null)))
endef

endif # __included-functions-mk
