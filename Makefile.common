TOPDIR ?= $(CURDIR)

PROJECT = make-initrd
VERSION = $(shell sed '/^Version: */!d;s///;q' $(TOPDIR)/.gear/make-initrd.spec)

sysconfdir ?= /etc
bootdir    ?= /boot
bindir     ?= /usr/bin
sbindir    ?= /usr/sbin
datadir    ?= /usr/share
libexecdir ?= /usr/libexec/$(PROJECT)
statedir   ?= /var/lib
infodir    ?= $(datadir)/info
mandir     ?= $(datadir)/man
man1dir    ?= $(mandir)/man1
tmpdir     ?= /tmp
prefix     ?= $(datadir)/$(PROJECT)
DESTDIR    ?=

helperdir      ?= /lib/initrd
helper_bindir  ?= $(helperdir)/bin
helper_sbindir ?= $(helperdir)/sbin

localbuilddir =

ifdef MKLOCAL
VERSION       = $(shell git describe HEAD)
prefix        = $(TOPDIR)
bindir        = $(TOPDIR)/utils
sbindir       = $(TOPDIR)/utils
libexecdir    = $(TOPDIR)/utils
localbuilddir = $(TOPDIR)/datasrc/_out
statedir      = $(tmpdir)
endif

Q = @
VERBOSE ?= $(V)
ifeq ($(VERBOSE),1)
    Q =
endif

quiet_cmd = \
	$(if $(VERBOSE),$(3),$(Q)printf "  %-07s%s\n" "$(1)" $(2); $(3))

CP       = $(Q)cp -a
RM       = $(Q)rm -f
CHMOD    = $(Q)chmod
INSTALL  = $(Q)install
MKDIR_P  = $(Q)mkdir -p
TOUCH_R  = $(Q)touch -r
STRIP    = $(Q)strip -s
SED      = $(call quiet_cmd,SED,$@,sed)
HELP2MAN = $(call quiet_cmd,MAN,$@,env -i help2man -N)
COMPILE  = $(call quiet_cmd,CC,$<,$(COMPILE.c))
LINK     = $(call quiet_cmd,CCLD,$@,$(LINK.o))
DEP      = $(call quiet_cmd,DEP,$<,$(CC))

get_objects = $(foreach name,$(notdir $(1)),$($(subst -,_,$(name))_SRCS:.c=.o))
get_depends = $(foreach name,$(notdir $(1)),$($(subst -,_,$(name))_SRCS:.c=.d))

warning_CFLAGS = \
	-Wall -Wextra -W -Wshadow -Wcast-align \
	-Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes \
	-Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn \
	-Wmissing-format-attribute -Wredundant-decls -Wdisabled-optimization \
	-Wno-pointer-arith

.PHONY: all

%: %.in
	$(SED) \
		-e 's,@VERSION@,$(VERSION),g' \
		-e 's,@PROJECT@,$(PROJECT),g' \
		-e 's,@BOOTDIR@,$(bootdir),g' \
		-e 's,@CONFIG@,$(sysconfdir),g' \
		-e 's,@STATEDIR@,$(statedir),g' \
		-e 's,@PREFIX@,$(prefix),g' \
		-e 's,@BINDIR@,$(bindir),g' \
		-e 's,@SBINDIR@,$(sbindir),g' \
		-e 's,@LIBEXECDIR@,$(libexecdir),g' \
		-e 's,@TMPDIR@,$(tmpdir),g' \
		-e 's,@LOCALBUILDDIR@,$(localbuilddir),g' \
		<$< >$@
	$(TOUCH_R) $< $@
	$(CHMOD) --reference=$< $@

%.o: %.c
	$(COMPILE) $(OUTPUT_OPTION) $<

# We need dependencies only if goal isn't "indent" or "clean".
ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),format)

%.d: %.c Makefile
	$(DEP) -MM $(CPPFLAGS) $< |sed -e 's,\($*\)\.o[ :]*,\1.o $@: Makefile ,g' >$@

ifneq ($(DEPS),)
-include $(DEPS)
endif

endif # format
endif # clean

clean:
	$(RM) -rf -- $(GARBAGE)

format:
	$(Q)clang-format -verbose -style=file -i $(wildcard $(C_SOURCES))
