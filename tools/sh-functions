#!/bin/sh -efu

. shell-error

export verbose="${VERBOSE:+-v}"

export workdir="${WORKDIR:?Work directory required}"
export rootdir="${ROOTDIR:?Root directory required}"
export datadir="${DATADIR:?Data directory required}"
export scriptdir="${SCRIPTDIR:?Scripts directory required}"
export imagefile="${IMAGEFILE-}"
export modules_ignore=" ${MODULES_IGNORE-} "
export blacklist="${BLACKLIST_MODULES-}"

export compress_method="${COMPRESS-}"
export outfile="$workdir/initrd.img"
export kernel="${KERNEL:?}"

kernel_major="${kernel%%.*}"
kernel_minor="${kernel#*.}"
kernel_minor="${kernel_minor%%.*}"
kernel_patch="${kernel#*.*.}"
kernel_patch="${kernel_patch%%[!0-9]*}"

export kernel_major kernel_minor kernel_patch

if [ -z "${kernel_major##*[!0-9]*}" ] ||
   [ -z "${kernel_minor##*[!0-9]*}" ] ||
   [ -z "${kernel_patch##*[!0-9]*}" ]
then
	fatal "Invalid kernel version \"$kernel\""
fi

export kernel_modules_dir="/lib/modules/$kernel"
[ -d "$kernel_modules_dir" ] ||
	fatal "Directory \"$kernel_modules_dir\" doesn't exist or not accessible."

normalize_modname() {
	printf '%s' "$*" |tr '-' '_'
}

[ -z "$blacklist" ] ||
	blacklist="$(normalize_modname "$blacklist")"

check_blacklist() {
	[ -n "$blacklist" ] ||
		return 0

	local m module
	module="$(normalize_modname "$1")"

	for m in $blacklist; do
		m="${m##*/}"
		m="${m%.ko}"
		[ "$module" != "$m" ] ||
			return 1
	done
}
