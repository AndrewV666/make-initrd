#!/bin/sh -efu

. sh-functions
. module-functions

. shell-error
. shell-signal

ignore_missing=
if [ "${1-}" = '--optional' ]; then
	ignore_missing=1
	shift
fi

workdir=
exit_handler()
{
	[ -z "$workdir" ] || rm -rf -- "$workdir"
}

workdir="$(mktemp -dt "$PROG.XXXXXXXXX")"
set_cleanup_handler exit_handler

add_module_callback() {
	printf '%s\n' "$@" >> "$workdir/list"
}

for n; do
	if [ -n "${n##*[/\[\].*&^\$\\\\/]*}" ]; then
		n="$(normalize_modname "$n")"
		add_module "$n"
		continue
	fi

	if [ -z "${n##/*}" ] && [ -f "$n" ]; then
		add_module "$n"
		continue
	fi

	if [ -n "${kernel_modules_dir-}" ]; then
		[ -f "$workdir/modules" ] ||
			find "$kernel_modules_dir" -type f -a \( -name '*.ko' -o -name '*.ko.*' \) >"$workdir/modules"

		if ! grep -E -e "$n" "$workdir/modules" >"$workdir/pattern.modules"; then
			[ -n "$ignore_missing" ] ||
				fatal "Unable to handle pattern: $n"
		fi

		while read -r m; do
			add_module "$m"
		done <"$workdir/pattern.modules"

		continue
	fi

	fatal "Unable to find module: $n"
done

[ ! -s "$workdir/list" ] ||
	xargs -r put-file "$rootdir" < "$workdir/list"
