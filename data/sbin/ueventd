#!/bin/sh -eu

. shell-error
. shell-process
. shell-signal

daemon_log_file="/var/log/$PROG.out.log"
daemon_err_file="/var/log/$PROG.err.log"
daemon_pid_file="/var/run/$PROG.pid"

if [ "$#" = 0 ]; then
	daemon ||
		exit 1
	message_syslog=1
fi

. /.initrd/initenv
. uevent-sh-functions

timeout_sec=
! timeout -s 0 /bin/true 2>/dev/null ||
	timeout_sec=-s

ueventd_fifo="/tmp/$PROG.fifo"
ping_handler()
{
	:>"$ueventd_fifo" >/dev/null 2>&1
}

glob()
{
	[ -e "$1" ]
}

run_handlers()
{
	local fn name
	for fn in "$handlerdir"/*; do
		[ -x "$fn" ] ||
			break

		name="${fn##*/}"
		name="${name#[0-9][0-9][0-9]-}"

		glob "$eventdir/$name".* ||
			continue

		verbose "Running $name handler ..."
		"$fn" || message "Event handler failed: $name"
	done
}

run_extenders()
{
	local fn name
	for fn in "$extendir"/*; do
		[ -x "$fn" ] ||
			break

		name="${fn##*/}"
		name="${name#[0-9][0-9][0-9]-}"

		verbose "Running $name extender ..."
		"$fn" || message "Extender failed: $name"
	done
}

[ -e "$ueventd_fifo" ] || mkfifo "$ueventd_fifo"
signal_handler ping_handler USR1

message "STARTING ..."

while :; do
	if ! glob "$filterdir"/*; then
		timeout $timeout_sec 1 cat "$ueventd_fifo" >/dev/null 2>&1 ||:
		run_extenders
		continue
	fi

	mv -f -- "$filterdir"/* "$eventdir"/ 2>/dev/null ||:

	run_handlers
	run_extenders
done
