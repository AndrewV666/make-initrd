#!/bin/sh
### BEGIN INIT INFO
# Provides:            mountfs
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:       3 4 5
# Default-Stop:
# Short-Description:   Unmounts file systems.
# Description:         Unmounts file systems.
# X-LFS-Provided-By:   LFS
### END INIT INFO

LOCKFILE=/var/lock/subsys/mountfs

case "$1" in
	start)
		touch "$LOCKFILE"
		exit 0
		;;
	stop)
		rm -f "$LOCKFILE"
		;;
esac

# Source function library.
. /etc/init.d/functions
. /etc/init.d/functions-addon
. /.initrd/initenv

action_begin_msg()
{
	[ -z "$*" ] || printf '%s ' "$*"
}

action_end_msg()
{
	local rc=$1
	if [ "$BOOTUP" = color ]; then
		[ $rc = 0 ] && echo_success || echo_failure
	fi
	echo
}

action_passed_msg()
{
	[ "$BOOTUP" != color ] ||
		echo_passed
	echo
}

action()
{
	action_begin_msg "$1"
	shift
	$*
	local rc=$?
	action_end_msg "$rc"
	return $rc
}

# Unmount file systems, killing processes if we have to.
UnmountFilesystems()
{
	local sig= retry delay findmnt msg= points

	retry="$1"; shift
	delay="$1"; shift
	findmnt="$1"; shift

	points="$($findmnt)"

	while [ -n "$points" -a "$retry" -gt 0 ]; do
		dsort points $points

		[ "$retry" -eq 3 ] || msg='(retry) '

		for point in $points; do
			action "Unmounting filesystem $msg[$point]:" umount -flt noproc "$point"
		done

		points="$($findmnt)"
		[ -n "$points" ] || break

		[ "${BOOTUP-}" != verbose ] || fuser -mv $points
		fuser -km $sig $points >/dev/null

		sleep $delay

		sig=-9
		retry=$(($retry-1))
	done
}

# Unmount non-/dev tmpfs.
non_dev_tmpfs()
{
	findmnt -mno TARGET -t tmpfs |
	while read t; do
		case "$t" in
			/dev|$rootmnt|$rootmnt/*) ;;
			*) printf '%s ' "$t" ;;
		esac
	done
}
UnmountFilesystems 3 5 non_dev_tmpfs

# Unmount all the rest.
all_rest()
{
	findmnt -mno SOURCE,TARGET |
	while read s t; do
		case "$s:$t" in
			none:*|*:/|*:$rootmnt|*:$rootmnt/*|*:/proc|*:/proc/*) ;;
			*) printf '%s ' "$t" ;;
		esac
	done
}
UnmountFilesystems 3 5 all_rest
