#!/bin/sh -efu

. ${TOOLSDIR:?}/sh-functions

ListModuleFiles() {
	modprobe --set-version="$kernel" --show-depends --ignore-all-commands "$@" 2>/dev/null |
		cut -d\  -f2-
}

IgnoredModule() {
	local name="$1" m
	for m in off null ${IGNORE_MODNAMES-}; do
		[ "$m" != "$name" ] || return 0
	done
	return 1
}

AddModuleFirmware() {
	local mod_name mod_path list name d fwfile

	mod_name="$1"; shift
	mod_path="$1"; shift

	list="$(modinfo -F firmware "$mod_path")" ||
		return 0

	for name in $list; do
		fwfile=
		for d in $FIRMWARE_DIRS; do
			if [ -r "$d/$name" ]; then
				fwfile="$d/$name"
				break
			fi

		done

		if [ -z "$fwfile" ]; then
			message "Firmware file \"$name\" for module \"$mod_name\" not found"
			continue
		fi
		[ -f "$rootdir/lib/firmware/$name" ] ||
			continue

		verbose "Adding firmware file \"$fwfile\" for module \"$mod_name\""
		install -pD -- "$fwfile" "$rootdir/lib/firmware/$name"
	done
}

AddModuleFile() {
	local path="$1" name="$1"
	name="${name##*/}"
	name="${name%.ko}"

	[ ! -f "$rootdir/$path" ] ||
		return 0

	if IgnoredModule "$name"; then
		message "Module \"$name\" cannot be ignored because other modules depend on it"
	fi

	verbose "Found module \"$name\" as $path"

	printf '%s\n' "$name" >> "$rootdir"/conf/modules
	install -pD "$path" "$rootdir/$path"

	AddModuleFirmware "$name" "$path"
}

AddModule() {
	local m name="$1"
	name="${name##*/}"
	name="${name%.ko}"

	ListModuleFiles "$name" |
	while read m; do
		AddModuleFile "$m"
	done
}

for n in "$@"; do
	AddModule "$n"
done
