# System paths
WORKDIR_SUFFIX	?= work
WORKDIR		?= @WORKDIR@/initrd-$(KERNEL).$(WORKDIR_SUFFIX)
ROOTDIR		?= $(WORKDIR)/root

TOOLSDIR	 = @PREFIX@/tools
DATADIR		?= @PREFIX@/data
SCRIPTDIR	?= @PREFIX@/scripts.d
FEATURESDIR	?= @PREFIX@/features
AUTODETECTDIR	?= @PREFIX@/autodetect

PATH		= $(TOOLSDIR):$(shell echo $$PATH)

# Helpers
GEN_INIT_CPIO		= @BINDIR@/gen_init_cpio
CREATE_INITRD		= $(TOOLSDIR)/create-initrd
PACK_IMAGE		= $(TOOLSDIR)/pack-image
ADD_MODULE		= $(TOOLSDIR)/add-module
LOAD_MODULE		= $(TOOLSDIR)/load-module
ADD_RESCUE_MODULES	= $(TOOLSDIR)/add-rescue-modules
PUT_FILE		= $(TOOLSDIR)/put-file
PUT_TREE		= $(TOOLSDIR)/put-tree


# User defaults
FEATURES	?=
KERNEL		?= $(shell uname -r)
IMAGE_SUFFIX	?=
IMAGEFILE	?= /boot/initrd-$(KERNEL)$(IMAGE_SUFFIX).img

# Global variables
FIRMWARE_DIRS		?= /lib/firmware/updates /lib/firmware /lib/firmware/$(KERNEL)/updates /lib/firmware/$(KERNEL)
VERBOSE			?=
FSTAB			?= /etc/fstab
BLACKLIST_MODULES	?=

# Load extra configs
feature_configs		 = $(realpath $(wildcard $(FEATURESDIR)/*/config.mk))
ifeq "$(feature_configs)" ''
$(error Cannot find configs for feature. Something goes wrong.)
endif
include $(feature_configs)

ifdef VERBOSE
  verbose=-v
  Q=
else
  Q = @
endif

