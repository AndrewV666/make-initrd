#!/bin/sh

. /.initrd/initenv
. uevent-sh-functions
. initrd-sh-functions
. rdshell-sh-functions

mnt="/mnt/luks-key"

freekey() {
	[ -d "$mnt" ] && umount "$mnt" && rmdir "$mnt" ||:
}

findkey() {
	local path keydev luksdev

	[ -f /etc/luks.keys ] ||
		return 2

	while IFS='	' read path keydev luksdev; do
		if [ -n "$luksdev" ]; then
			get_dev "$luksdev" ||
				continue
		fi

		if [ -n "$keydev" ]; then
			mkdir -p -- "$mnt"
			mount -r "$keydev" "$mnt" ||
				return 1
		fi

		if [ ! -f "$mnt/$path" ]; then
			printf "ERROR(luks): $path: keyfile not found.\n" >&2
			return 1
		fi

		keyfile="$mnt/$path"
		printf "Found keyfile '%s' for '%s' encrypted partition.\n" "$path" "${LUKS_ROOT#/dev/}"
		return 0

	done < /etc/luks.keys

	# Keyfile not found yet.
	return 2
}

readkey() {
	local keyfile="$1"
	[ -s "$keyfile" ] ||
		return 0
	{ cat "$keyfile"; printf .; } |
		sed \
			-e ':a'      \
			-e 'N'       \
			-e '$!ba'    \
			-e 's/\.$//' \
			-e 's/\n$//'
}

handler() {
	nameluks="${LUKS_ROOT##*/}-luks"

	# skip if $nameluks has already exist
	! dmsetup info "$nameluks" >/dev/null 2>&1 ||
		exit 0

	local rc=0 keyfile=
	if [ -n "$LUKS_KEY" ] && [ "$LUKS_KEY" != 0 ]; then
		findkey ||
			rc="$?"
		[ "$rc" != 0 ] ||
			{ readkey "$keyfile" |cryptsetup -d- luksOpen "$LUKS_ROOT" "$nameluks"; } ||
			rc="$?"
		freekey
	else
		# WARNING: Wait decrypt forever!
		rc=2
		while [ "$rc" = 2 ]; do
			cryptsetup luksOpen "$LUKS_ROOT" "$nameluks"
			rc="$?"
		done
	fi

	if [ "$rc" != 0 ]; then
		printf 'ERROR(luks): %s: unable to activate LUKS (rc=%s)\n' "$LUKS_ROOT" "$rc" >&2
		exit 1
	fi
}

while ! console_lock; do
	sleep 0.5
done

exec 0</dev/console >/dev/console 2>&1

rc=0
for e in "$eventdir"/luks.*; do
	r=0
	( . "$e"; handler; ) || r="$?"
	case "$r" in
		2) ;;
		1) rc=1 ;;
		0) done_event "$e" ;;
	esac
done

console_unlock
exit $rc
