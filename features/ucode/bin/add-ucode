#!/bin/bash -efu

. sh-functions

# to be sure that microcode loading supported by kernel
[ -f "$KERNEL_CONFIG" ] &&
	grep -E -qs "^CONFIG_MICROCODE(|_INTEL|_AMD)=[my]" "$KERNEL_CONFIG" ||
	fatal "Microcode loading support is missing in kernel"

if ! IUCODE_BIN="$(type -P iucode_tool)"; then
	message "Utility not found: iucode_tool"
	exit 0
fi

cpu_vendor="${UCODE_CPU_VENDOR-}"
cpu_family="${UCODE_CPU_FAMILY-}"
iucode_scan_system='--scan-system'

[ -z "${UCODE_ALL_MICROCODE-}" ] ||
	iucode_scan_system=

if [ -z "$cpu_vendor" ]; then
	cpu="$(sed -r -n \
		-e '1,/^processor[[:cntrl:]]\:.*/ d' \
		-e '/^model[[:space:]]+[[:cntrl:]]\:.*/,$ d' \
		-e 's/.*[[:cntrl:]]\:[[:space:]](.*)/\1/ip' \
		"$PROCFS_PATH/cpuinfo"
	)"
	if [ -n "$cpu" ]; then
		cpu_vendor="${cpu%%
*}"
		cpu_family="${cpu##*
}"
	fi
fi

prep_early_firmware()
{
	local fw_path fw_file='' fw="$1"
	shift

	for fw_path in ${FIRMWARE_DIRS:-/lib/firmware}; do
		if [ -f "$fw_path/$fw" ]; then
			fw_file="$fw_path/$fw"
			break
		fi
	done

	if [ -z "$fw_file" ]; then
		message "firmware file not found for \`$fw'. Microcode update unavailable."
		return 0
	fi

	mkdir "$workdir"/ucode ||
		return
	mkdir -p -- "$workdir"/ucode/kernel/x86/microcode
	cp ${VERBOSE:+-v} -- "$fw_file" "$workdir"/ucode/kernel/x86/microcode/"$cpu_vendor".bin
}

prep_amd_ucode()
{
	local family=0 ucode_file=

	[ -z "$cpu_family" ] || family="$(printf '%x' "$cpu_family")"
	[ "$family" -ge 15 ] && \
		ucode_file=amd-ucode/microcode_amd_fam"$family"h.bin || \
		ucode_file=amd-ucode/microcode_amd.bin

	prep_early_firmware "$ucode_file" && return 0

	return 1
}

prep_intel_ucode()
{
	# microcode loading supported only for CPUs >= PentiumPro
	[ -n "$cpu_family" ] && [ "$cpu_family" -ge 6 ] || return 1

	[ -x "$IUCODE_BIN" ] ||
		return 1

	local fw_path
	for fw_path in ${FIRMWARE_DIRS:-/lib/firmware}; do
		if [ -d "$fw_path"/intel-ucode ]; then
			"$IUCODE_BIN" \
					--quiet \
					$iucode_scan_system \
					--write-earlyfw="$workdir"/ucode.cpio \
					"$fw_path"/intel-ucode
			mkdir "$workdir"/ucode &&
				cpio -D "$workdir"/ucode --quiet -id < "$workdir"/ucode.cpio
			return
		fi
	done

	return 1
}

case "$cpu_vendor" in
	AuthenticAMD) prep_amd_ucode
		;;
	GenuineIntel) prep_intel_ucode
		;;
	*) exit 0
		;;
esac
rc=$?

if [ -d "$workdir/ucode" ]; then
	cd "$workdir/ucode"

	find . -type f -execdir touch -c -m --date="1970-01-01 00:00:00 +0000" '{}' '+'

	# shellcheck disable=SC2185
	find -O2 . -mindepth 1 \
		   \( -type f -a -printf 'file %p %p %#m 0 0\n'  \) \
		-o \( -type l -a -printf 'slink %p %l %#m 0 0\n' \) \
		-o \( -type d -a -printf 'dir %p %#m 0 0\n'      \) |
		sort |
		gen_init_cpio -t 0 - > "$workdir"/ucode.cpio

	rm -rf -- "$workdir/ucode"
fi

exit $rc
