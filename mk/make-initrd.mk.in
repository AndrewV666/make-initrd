.NOTPARALLEL:
.EXPORT_ALL_VARIABLES:
.DEFAULT_GOAL := all

ifeq "$(__INTERNAL_MAKE_EXECUTION)" ''
public-goals  := all guess-config guess-modules feature-info bug-report
private-goals := $(filter-out $(public-goals),$(MAKECMDGOALS))

ifneq "$(private-goals)" ''
$(error You MUST NOT call private goals directly: $(private-goals))
endif
endif # __INTERNAL_MAKE_EXECUTION

ifeq "$(MAKECMDGOALS)" 'genimage'
# The previous call to 'guess' has already done this.
IGNORE_DEPMOD := 1
endif

include @projectdir@/mk/config.mk
include @projectdir@/mk/rules.mk

ifneq "$(filter guess guess-config guess-modules,$(MAKECMDGOALS))" ''
include @projectdir@/mk/guess.mk
endif

ifeq "$(MAKECMDGOALS)" 'genimage'
include $(GUESSDIR)/guessed.mk

ALL_FEATURES         := $(filter-out ,$(call expand-features,FEATURE-REQUIRES,$(FEATURES)))
ALL_DISABLE_FEATURES := $(filter-out ,$(DISABLE_FEATURES) $(call expand-disabled-features,$(ALL_FEATURES)))
ALL_ACTIVE_FEATURES  := $(filter-out \
	$(call expand-list,FEATURE-REQUIRED,$(DEPRECATED_FEATURES) $(ALL_DISABLE_FEATURES)),\
	$(ALL_FEATURES))

ifdef VERBOSE
$(info FEATURES              : $(FEATURES))
$(info ALL FEATURES          : $(ALL_FEATURES))
$(info ALL DISABLED FEATURES : $(ALL_DISABLE_FEATURES))
$(info ALL ACTIVE FEATURES   : $(ALL_ACTIVE_FEATURES))
endif

# Load requested features
$(call include-features-once,$(sort $(ALL_ACTIVE_FEATURES)))

endif # MAKECMDGOALS = genimage

pack: pre-pack

all: check-for-root
	@rc=0; \
	if [ -n "${__INTERNAL_MAKE_EXECUTION}" ]; then \
		$(MSG) "Unexpected env variable: __INTERNAL_MAKE_EXECUTION"; \
		exit 1; \
	fi; \
	export __INTERNAL_MAKE_EXECUTION=1; \
	for c in $(INITRD_CONFIG_LIST); do \
		wsuffix="$${c##*/}"; \
		wsuffix="$${wsuffix%.mk}"; \
		export WORKDIR_SUFFIX="$$wsuffix"; \
		export INITRD_CONFIG="$$c"; \
		export STARTUP_TIME="$$(date +'%s')"; \
		$(MSG) "Config file: $$c"; \
		$(TOOLSDIR)/run-make $(MAKE) $(MFLAGS) -f @projectdir@/mk/make-initrd.mk guess    || { rc=1; break; }; \
		$(TOOLSDIR)/run-make $(MAKE) $(MFLAGS) -f @projectdir@/mk/make-initrd.mk genimage || { rc=1; break; }; \
	done; \
	rm -f -- $(TEMPDIR)/images; \
	exit $$rc

guess-config: check-for-root guess
	@cat $(GUESSDIR)/guessed.mk
	$Qrm -rf -- "$(GUESSDIR)"
	$Qrmdir -- "$(WORKDIR)"

guess-modules: check-for-root guess
	@for f in $(GUESSDIR)/guess:modules* $(GUESSDIR)/guess:modalias*; do \
		[ ! -s "$$f" ] || cat "$$f"; \
	done | \
	   depinfo \
	      --input=- \
	      --set-version="$(KERNEL)" \
	      --no-prefix \
	      --no-firmware \
	      --no-builtin \
	      2>/dev/null | \
	   sort -u
	$Qrm -rf -- "$(GUESSDIR)"
	$Qrmdir -- "$(WORKDIR)"

ifneq "$(filter feature-info,$(MAKECMDGOALS))" ''
INITRD_CONFIG = /dev/null
include @projectdir@/mk/config.mk
$(call show-feature-dependency,$(FEATURE_NAMES))

feature-info:
	@:
endif

bug-report: check-for-root
	@mkdir -m 755 -p -- $(REPORTDIR)
	@$(TOOLSDIR)/bug-report
	$Qrm -rf -- "$(REPORTDIR)"
	$Qrmdir -- "$(WORKDIR)"
