PROJECT = @PROJECT@
VERSION = @VERSION@

# Temprary directory used for processing all images.
# It is created once when the make-initrd starts.
TEMPDIR		?=

ifeq "$(TEMPDIR)" ''
$(error TEMPDIR is empty. You SHOULD NOT use config.mk directly.)
endif

# This is the working directory for each image.
# It is created for each configuration file.
WORKDIR_SUFFIX	?= work
WORKDIR		 = $(TEMPDIR)/$(KERNEL).$(WORKDIR_SUFFIX)

# This is the root directory of the image.
ROOTDIR		 = $(WORKDIR)/img

# In this directory are files received from autodetect.
GUESSDIR	 = $(WORKDIR)/guess

# This is directory used for bug-report target.
REPORTDIR	 = $(WORKDIR)/report

UTILSDIR	 = @PREFIX@/utils
TOOLSDIR	 = @PREFIX@/tools
LOCALBUILDDIR	 = @LOCALBUILDDIR@
DATADIR		?= @PREFIX@/data
SCRIPTDIR	?= @PREFIX@/scripts.d
FEATURESDIR	?= @PREFIX@/features
DETECTDIR	?= @PREFIX@/guess
KMODDEPSDIR	?= @PREFIX@/kmodule.deps.d
STATEDIR	?= @STATEDIR@
BOOTDIR		?= /boot
SYSCONFDIR	?= /etc
SYSFS_PATH	?= /sys
PROCFS_PATH	?= /proc

PATH		= $(UTILSDIR):$(TOOLSDIR):$(shell echo $$PATH)

# Config file locations
INITRD_CONFIG		?=
INITRD_CONFIG_LIST	?= $(wildcard $(SYSCONFDIR)/initrd.mk $(SYSCONFDIR)/initrd.mk.d/*.mk)


# Global variables
RESOLVE_MODALIAS	?= 1
UDEV_VERSION		?= $(shell $(TOOLSDIR)/udev-version)
KERNEL			?= $(shell uname -r)
KERNEL_CONFIG		?= $(BOOTDIR)/config-$(KERNEL)
KERNEL_MODULES_DIR	?= /lib/modules/$(KERNEL)
KERNEL_MODULES		?= $(KERNEL_MODULES_DIR)/kernel
ARCH			?= $(shell uname -m)

LIBNAME			?= $(shell getconf SLIB)

FSTAB			?= /etc/fstab
PROC_MOUNTS		?= $(PROCFS_PATH)/mounts
MOUNTPOINTS		?= /
DEVICES			?=
DISABLE_FEATURES	?= systemd
DISABLE_GUESS		?=


# This is helper to filter a disabled files.
wildcard_features = \
	$(filter-out \
		$(foreach exl,$(DISABLE_FEATURES),$(realpath $(exl:%=$(FEATURESDIR)/%/$(1)))), \
		$(realpath $(wildcard $(FEATURESDIR)/*/$(1))))


# The following functions should be available in both config.mk and rules.mk

# $(call if-success,<command>,<then>,<else>)
# Return <then> if <command> exits with 0, <else> otherwise.
if-success = $(if $(1),$(shell { $(1); } >/dev/null 2>&1 && echo "$(2)" || echo "$(3)"))

# $(call success,<command>)
# Return y if <command> exits with 0, n otherwise
success = $(call if-success,$(1),y,n)

# $(call failure,<command>)
# Return n if <command> exits with 0, y otherwise
failure = $(call if-success,$(1),n,y)

if_kernel_version_greater_or_equal = $(if $(1),$(call if-success,$(TOOLSDIR)/kernel-compare "ge" "$(KERNEL)" "$(1)",PROJECT,))
if_kernel_version_greater          = $(if $(1),$(call if-success,$(TOOLSDIR)/kernel-compare "gt" "$(KERNEL)" "$(1)",PROJECT,))
if_kernel_version_less_or_equal    = $(if $(1),$(call if-success,$(TOOLSDIR)/kernel-compare "le" "$(KERNEL)" "$(1)",PROJECT,))
if_kernel_version_less             = $(if $(1),$(call if-success,$(TOOLSDIR)/kernel-compare "lt" "$(KERNEL)" "$(1)",PROJECT,))
if_kernel_version_equal            = $(if $(1),$(call if-success,$(TOOLSDIR)/kernel-compare "eq" "$(KERNEL)" "$(1)",PROJECT,))

# This user's preferences are make sence only if user's config file is loaded.
ifneq "$(INITRD_CONFIG)" ''

# User defaults
FEATURES		?=
IMAGE_SUFFIX		?=
IMAGEFILE		?= $(BOOTDIR)/initrd-$(KERNEL)$(IMAGE_SUFFIX).img
FIRMWARE_DIRS		?= /lib/firmware/updates /lib/firmware /lib/firmware/$(KERNEL)/updates /lib/firmware/$(KERNEL)
VERBOSE			?=
BLACKLIST_MODULES	?=

# Load system configuration
include @PREFIX@/mk/initfiles.mk

# Load user configuration
include $(INITRD_CONFIG)

ifeq "$(MAKECMDGOALS)" 'guess'
unknown_features = \
	$(filter-out \
		$(notdir $(wildcard $(FEATURESDIR)/*)), \
		$(FEATURES))

ifneq "$(unknown_features)" ''
$(info WARNING: Unknown features are specified in the config: $(unknown_features))
endif
endif

# Load extra configs
feature_configs		 = $(call wildcard_features,config.mk)
ifeq "$(feature_configs)" ''
$(error Cannot find configs for feature. Something goes wrong.)
endif
include $(feature_configs)

endif # INITRD_CONFIG

ifdef VERBOSE
  verbose = -v
  Q =
  V = @
else
  Q = @
  V = @\#
endif

MSG   = echo "$$(msg-timestamp)"
MSG_N = echo -n "$$(msg-timestamp)"
